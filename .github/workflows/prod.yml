name: Продакшен

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Определение изменённых частей
        id: changes
        run: |
          echo "CHANGED_BACKEND=$(git diff --name-only HEAD^ HEAD | grep -q '^backend/' && echo 'true' || echo 'false')" >> $GITHUB_ENV
          echo "CHANGED_FRONTEND=$(git diff --name-only HEAD^ HEAD | grep -q '^app/' && echo 'true' || echo 'false')" >> $GITHUB_ENV

      - name: Настройка SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Установка Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Деплой
        env:
          CHANGED_BACKEND: ${{ env.CHANGED_BACKEND }}
          CHANGED_FRONTEND: ${{ env.CHANGED_FRONTEND }}
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} <<EOF
          set -ex
          cd /huntai
          git pull
          echo "CHANGED_BACKEND: ${{ env.CHANGED_BACKEND }} CHANGED_FRONTEND: ${{ env.CHANGED_FRONTEND }}" > test.txt
          echo "${{ secrets.BACKEND_ENV }}" > backend/.env
          echo "${{ secrets.FRONTEND_ENV }}" > app/.env
      
          docker network inspect backend-network >/dev/null 2>&1 || docker network create backend-network
      
      \    #Билд бэк
          # if [ "$CHANGED_BACKEND" = "true" ]; then
          # fi
          docker compose -f docker-compose.prod.yml build backend
          docker compose -f docker-compose.prod.yml stop backend || true
          docker compose -f docker-compose.prod.yml rm -f backend || true
          docker compose -f docker-compose.prod.yml up -d backend

          #Билд фронта
          docker compose -f docker-compose.prod.yml build frontend
          docker compose -f docker-compose.prod.yml stop frontend || true
          docker compose -f docker-compose.prod.yml rm -f frontend || true
          docker compose -f docker-compose.prod.yml up -d frontend
          docker image prune -f
      
          docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          docker logs backend --tail 20
          docker logs mongo --tail 20

          EOF
      