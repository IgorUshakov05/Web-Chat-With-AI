name: Продакшен

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Определение изменённых частей
        id: changes
        run: |
          echo "CHANGED_BACKEND=$(git diff --name-only HEAD^ HEAD | grep -q '^backend/' && echo 'true' || echo 'false')" >> $GITHUB_ENV
          echo "CHANGED_FRONTEND=$(git diff --name-only HEAD^ HEAD | grep -q '^app/' && echo 'true' || echo 'false')" >> $GITHUB_ENV

      - name: Настройка SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Установка Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      - name: Деплой
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          set -e
          cd /huntai
          
          # Остановка старых контейнеров с очисткой orphans
          docker compose -f docker-compose.prod.yml down --remove-orphans
          
          # Запуск MongoDB если не запущена
          if ! docker ps --format '{{.Names}}' | grep -q '^mongo$'; then
            docker compose -f docker-compose.prod.yml up -d mongo
            sleep 20
          fi
          
          # Полный перезапуск приложений
          docker compose -f docker-compose.prod.yml up -d --build
          EOF